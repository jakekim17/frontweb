@using Wow
@using Wow.Tv.FrontWeb.MenuService;
@using Wow.Tv.Middle.Model.Db49.wowtv
@using Wow.Tv.Middle.Model.Db49.wowtv.Menu
@using Wow.Tv.Middle.Model.Db90.DNRS

@model T_NEWS_PRG

@{
    string wowTvStyle = AppState["WowTvStyle"].ToString();
    string wowTvScript = AppState["WowTvScript"].ToString();


    NTB_PROGRAM_TEMPLATE programTemplate = ViewBag.ProgramTemplate;
    int broadWatchNumber = ViewBag.BroadWatchNumber;
    List<T_NEWS_PRG> familyList = ViewBag.FamilyList;
    List<T_NEWS_PRG> childList = ViewBag.ChildList;
    string programType = ViewBag.ProgramType;
    List<NTB_MENU> menuList1 = ViewBag.MenuList1;

    bool isFirst = true;

    int topMenuSeq = 0;
    switch(Model.BroadSectionCode)
    {
        case "Stock":
            topMenuSeq = 724;
            break;
        case "RealEstate":
            topMenuSeq = 725;
            break;
        case "Insurance":
            topMenuSeq = 726;
            break;
        case "PinTech":
            topMenuSeq = 727;
            break;
        case "LifeEconomy":
            topMenuSeq = 21509;
            break;
    }
}

@section styles{
    <link rel="stylesheet" href="@wowTvStyle/css/tv.css">
}

@section scripts{
    <script src="@wowTvScript/Broad/ProgramMain/Index.js?date=20180103162000"></script>
    <script src="http://img.vrixon.com/adsdk/wowtv/test/vrixadsdk.js"></script>
}


@section modalDiv{
    <div id="divPopupCatagory" class="modal fade" role="dialog"></div>
}


<input type="hidden" id="hidTopMenuSeq" value="@topMenuSeq" />

@section WrapOutTop{
    <!-- sub visual -->
<div class="sub-visual-area" style="background:url('@(String.IsNullOrEmpty(ViewBag.MainImg) == true ? "/Content/CgDefault/CG_3(570_321).jpg" : ViewBag.MainImg)') center 0 no-repeat;">
    <!-- visual -->
    <div class="visual-area">
        <!-- top menu -->
        <div class="top-menu">
            @if (programType == "Union")
            {
                if (childList.Count > 0)
                {
                    <div class="box">
                        <ul>
                            @foreach (var item in childList)
                            {
                                <li @(item.PRG_CD == Model.PRG_CD ? " class=on" : "")><a href="#" onclick="return ProgramMainIndex.GoProgramMain('@item.PRG_CD');"><span>@item.PRG_NM</span></a></li>
                            }
                        </ul>
                    </div>
                }
            }
            else
            {
                if (familyList.Count > 0)
                {
            <div class="box">
                <ul>
                    @foreach (var item in familyList)
                    {
                    <li @(item.PRG_CD == Model.PRG_CD ? " class=on" : "")><a href="#" onclick="return ProgramMainIndex.GoProgramMain('@item.PRG_CD');"><span>@item.PRG_NM</span></a></li>
                    }
                </ul>
            </div>
                }
            }
        </div>
        <!-- // top menu -->
        <!-- middle menu 20180123 middle-menu 영역 추가 -->
        <div class="middle-menu">
            @Html.Raw(programTemplate.REMARK)
        </div>
        <!-- // middle menu -->
        <!-- bottom box -->
        <div class="bottom-box">
            <!-- menu -->
            <div class="menu-box">
                <ul>
                    @if (programTemplate.WOW_YN == "Y")
                    {
                    <li><a href="#" onclick="return ProgramMainIndex.OpenPopup('@programTemplate.WOW_URL');">와우스타</a></li>
                    }
                    else
                    {
                        @*<li><a href="#" onclick="return ProgramMainIndex.OpenPopup('');">와우스타</a></li>*@
                    }
                    @if (programTemplate.WOWNET_YN == "Y")
                    {
                    <li><a href="#" onclick="return ProgramMainIndex.OpenPopup('@programTemplate.WOWNET_URL');">와우넷</a></li>
                    }
                    else
                    {
                        @*<li><a href="#" onclick="return ProgramMainIndex.OpenPopup('');">와우넷</a></li>*@
                    }
                    @if (programTemplate.WOW_CAFE_YN == "Y")
                    {
                    <li><a href="#" onclick="return ProgramMainIndex.OpenPopup('@programTemplate.WOW_CAFE_URL');">와우카페</a></li>
                    }
                    else
                    {
                        @*<li><a href="#" onclick="return ProgramMainIndex.OpenPopup('');">와우카페</a></li>*@
                    }
                    @if (programTemplate.NAVER_CAFE_YN == "Y")
                    {
                    <li><a href="#" onclick="return ProgramMainIndex.OpenPopup('@programTemplate.NAVER_CAFE_URL');">네이버카페</a></li>
                    }
                    else
                    {
                        @*<li><a href="#" onclick="return ProgramMainIndex.OpenPopup('');">네이버카페</a></li>*@
                    }
                </ul>
                <ul class="right-btn">
                    @if (programTemplate.NAVER_READ_YN == "Y")
                    {
                    <li><a href="#" onclick="return ProgramMainIndex.OpenPopup('@programTemplate.NAVER_READ_URL');">네이버TV</a></li>
                    }
                    else
                    {
                        @*<li><a href="#" onclick="return ProgramMainIndex.OpenPopup('');">네이버TV</a></li>*@
                    }
                    @if (programTemplate.YOUTUBE_READ_YN == "Y")
                    {
                    <li><a href="#" onclick="return ProgramMainIndex.OpenPopup('@programTemplate.YOUTUBE_READ_URL');">유튜브</a></li>
                    }
                    else
                    {
                        @*<li><a href="#" onclick="return ProgramMainIndex.OpenPopup('');">유튜브</a></li>*@
                    }
                </ul>
            </div>
            <!-- // menu -->
            <!-- title area -->
            <div class="title-box">
                <span class="pin-btn"><a href="#" id="btnProgramPin">핀하기</a></span>
                <div class="title">
                    <strong>@Model.PRG_NM</strong>
                    <ul>
                        <li>
                            @if (Model.IsFirst == true)
                            {
                            <span class="box-icon">첫방송</span>
                            }
                            @if (Model.IsRenewal == true)
                            {
                                <span class="box-icon">개편</span>
                            }
                            <span class="font-color02">방송시간</span> @(Model.DayOfWeekString == null ? "" : String.Join("·", Model.DayOfWeekString))  @Model.BRO_START ~ @Model.BRO_END
                        </li>
                        <li><span class="font-color02">제작진</span> @Model.GetPdTdNames(", ")</li>
                    </ul>
                </div>
                @*<ul class="right-btn">
                    <li><span class="btn-type1"><a href="#" onclick="return ProgramMainIndex.OpenTvProgramBuy();">방송프로그램 구입</a></span></li>
                    <li><span class="btn-type2"><a href="#" onclick="return ProgramMainIndex.OpenContentsBuy();">유료서비스 안내</a></span></li>
                </ul>*@
                <div class="tv-info">
                    원활한 방송 시청을 위하여 Window8.1 이상의 최신버전 윈도우와
                    <a href="http://windows.microsoft.com/ko-kr/internet-explorer/download-ie" target="_blank"> Internet Exploer11</a> 이상 또는 HTML5가  지원되는 <a href="https://www.google.co.kr/chrome/" target="_blank">Chrome</a>,
                    <a href="https://www.mozilla.org/ko/firefox/new/" target="_blank"> Firefox</a> 브라우저 사용을 권장합니다.
                </div>
            </div>
            <!-- //title area -->
        </div>
        <!-- // bottom box -->
    </div>
    <!-- visual -->

    @if(programType == "Union")
    {
    }
    else
    {
        <!-- middle-area -->
        if (childList.Count > 0)
        {
        <div class="middle-area">
            <div class="menu-box">
                <div class="menu">
                    <ul>
                        @foreach (var item in childList)
                        {
                        <li class="@(Model.PRG_CD == item.PRG_CD ? "on" : "")"><a href="#" onclick="return ProgramMainIndex.GoProgramMain('@item.PRG_CD');"><em></em>@item.PRG_NM</a></li>
                        }
                    </ul>
                </div>
            </div>
        </div>
        }
        <!-- middle-area -->
        <!-- bottom-area -->
        <div class="bottom-area">
            <div class="menu-box">
                <div class="menu">
                    <ul>
                        @foreach (var item in menuList1)
                        {
                            string broadWatchYn = "N";
                            string noticeYn = "N";
                            string feedBackYn = "N";
                            bool isGoLogin = false;
                            string url = item.LINK_URL;

                            MenuCondition menuCondition = new MenuCondition();
                            menuCondition.ChannelCode = CommonCodeStatic.MENU_BROAD_FRONT_OR_DUAL_CHANNEL_CODE;
                            menuCondition.SearchProgramCode = Model.PRG_CD;
                            menuCondition.Depth = 1;
                            menuCondition.ActiveYn = "Y";
                            menuCondition.PageSize = -1;
                            menuCondition.UpMenuSeq = item.MENU_SEQ;
                            menuCondition.Depth = 2;
                            var menuList_2 = new MenuServiceClient().SearchList(menuCondition);
                            if (item.CONTENT_TYPE_CODE == "Corner" || menuList_2.ListData.Where(a => a.CONTENT_TYPE_CODE == "Corner").Count() > 0)
                            {
                                url = "/Broad/Corner/Index";
                            }
                            else if (item.CONTENT_TYPE_CODE == "Board" || menuList_2.ListData.Where(a => a.CONTENT_TYPE_CODE == "Board").Count() > 0)
                            {
                                switch (item.BoardTypeCode)
                                {
                                    case "Notice":
                                        url = "/Broad/Notice/Index";
                                        noticeYn = "Y";
                                        break;
                                    case "Normal":
                                        url = "/Broad/Basic/Index";
                                        break;
                                    case "Official":
                                        url = "/Broad/Official/Index";
                                        break;
                                    case "FAQ":
                                        url = "/Broad/FAQ/Index";
                                        break;
                                    case "Inquiry":
                                        url = "/Broad/Inquiry/Index";
                                        break;
                                    case "FeedBack":
                                        url = "/Broad/FeedBack/Index";
                                        feedBackYn = "Y";
                                        if (LoginHandler.IsLogin == false)
                                        {
                                            //isGoLogin = true;
                                        }
                                        break;
                                }
                            }
                            else if (item.CONTENT_TYPE_CODE == "Trade" || menuList_2.ListData.Where(a => a.CONTENT_TYPE_CODE == "Trade").Count() > 0)
                            {
                                url = "/Broad/Trade/Index";
                            }


                            if(url == "/Broad/BroadWatch/Index")
                            {
                                broadWatchYn = "Y";
                            }

                            if (isGoLogin == true)
                            {
                                <li @(isFirst == true ? "class=on" : "") devProgramMenuSeq="@item.MENU_SEQ" devBroadWatchYn="@broadWatchYn" devNoticeYn="@noticeYn" devFeedBackYn="@feedBackYn"><a href="#" @(isFirst == true ? "class=devMenuItem" : "") onclick="return ProgramMainIndex.GoLogin('@item.CONTENT_SEQ', '@item.MENU_SEQ');">@item.MENU_NAME</a></li>
                                }
                                else
                                {
                                <li @(isFirst == true ? "class=on" : "") devProgramMenuSeq="@item.MENU_SEQ" devBroadWatchYn="@broadWatchYn" devNoticeYn="@noticeYn" devFeedBackYn="@feedBackYn"><a href="#" @(isFirst == true ? "class=devMenuItem" : "") onclick="return ProgramMainIndex.BindContentPartial('@url', '0', 0, '@item.MENU_SEQ');">@item.MENU_NAME</a></li>
                                }
                            }
                            isFirst = false;
                        }

                    </ul>
                </div>
            </div>
        </div>
        <!-- bottom-area -->
    }
</div>
<!-- // sub visual -->

}


<input type="hidden" id="hidProgramCode" value="@Model.PRG_CD" />
<input type="hidden" id="hidProgramName" value="@Model.PRG_NM" />
<input type="hidden" id="hidProgramType" value="@programType" />
<input type="hidden" id="hidMenuSeq" value="@Request["menuSeq"]" />
<input type="hidden" id="hidBroadWatchNumber" value="@broadWatchNumber" />
<input type="hidden" id="hidLoginUrl" value="@System.Configuration.ConfigurationManager.AppSettings["UserLoginUrl"]" />
<input type="hidden" id="hidIsFeedBack" value="@Request["isFeedBack"]" />
<input type="hidden" id="hidFeedBackContentSeq" value="@Request["FeedBackContentSeq"]" />
<input type="hidden" id="hidFeedBackMenuSeq" value="@Request["FeedBackMenuSeq"]" />
<input type="hidden" id="hidIsNotice" value="@Request["isNotice"]" />
<input type="hidden" id="hidNoticeContentSeq" value="@Request["noticeContentSeq"]" />
<input type="hidden" id="hidNoticeMenuSeq" value="@Request["noticeMenuSeq"]" />

<div id="divContent">
</div>

