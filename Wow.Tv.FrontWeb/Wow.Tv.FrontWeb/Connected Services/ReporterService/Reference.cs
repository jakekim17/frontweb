//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wow.Tv.FrontWeb.ReporterService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ReporterService.IReporterService")]
    public interface IReporterService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReporterService/GetReporterList", ReplyAction="http://tempuri.org/IReporterService/GetReporterListResponse")]
        Wow.Tv.Middle.Model.Common.ListModel<Wow.Tv.Middle.Model.Db49.Article.NUP_REPORTER_SELECT_Result> GetReporterList(string searchId, string searchName, string searchInitial, System.Nullable<int> page, System.Nullable<int> pageSize, string isRandom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReporterService/GetReporterList", ReplyAction="http://tempuri.org/IReporterService/GetReporterListResponse")]
        System.Threading.Tasks.Task<Wow.Tv.Middle.Model.Common.ListModel<Wow.Tv.Middle.Model.Db49.Article.NUP_REPORTER_SELECT_Result>> GetReporterListAsync(string searchId, string searchName, string searchInitial, System.Nullable<int> page, System.Nullable<int> pageSize, string isRandom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReporterService/GetReporterInfo", ReplyAction="http://tempuri.org/IReporterService/GetReporterInfoResponse")]
        Wow.Tv.Middle.Model.Db49.Article.NUP_REPORTER_SELECT_Result GetReporterInfo(string reporterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReporterService/GetReporterInfo", ReplyAction="http://tempuri.org/IReporterService/GetReporterInfoResponse")]
        System.Threading.Tasks.Task<Wow.Tv.Middle.Model.Db49.Article.NUP_REPORTER_SELECT_Result> GetReporterInfoAsync(string reporterId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReporterService/GetAWordToReporter", ReplyAction="http://tempuri.org/IReporterService/GetAWordToReporterResponse")]
        Wow.Tv.Middle.Model.Common.ListModel<Wow.Tv.Middle.Model.Db49.Article.Reporter.ReportAword> GetAWordToReporter(Wow.Tv.Middle.Model.Db49.Article.Reporter.AwordCondition condition, Wow.Tv.Middle.Model.Common.LoginUserInfo loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReporterService/GetAWordToReporter", ReplyAction="http://tempuri.org/IReporterService/GetAWordToReporterResponse")]
        System.Threading.Tasks.Task<Wow.Tv.Middle.Model.Common.ListModel<Wow.Tv.Middle.Model.Db49.Article.Reporter.ReportAword>> GetAWordToReporterAsync(Wow.Tv.Middle.Model.Db49.Article.Reporter.AwordCondition condition, Wow.Tv.Middle.Model.Common.LoginUserInfo loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReporterService/SaveAWordToReporter", ReplyAction="http://tempuri.org/IReporterService/SaveAWordToReporterResponse")]
        void SaveAWordToReporter(Wow.Tv.Middle.Model.Db49.Article.NTB_REPORTER_AWORD model, Wow.Tv.Middle.Model.Common.LoginUserInfo loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReporterService/SaveAWordToReporter", ReplyAction="http://tempuri.org/IReporterService/SaveAWordToReporterResponse")]
        System.Threading.Tasks.Task SaveAWordToReporterAsync(Wow.Tv.Middle.Model.Db49.Article.NTB_REPORTER_AWORD model, Wow.Tv.Middle.Model.Common.LoginUserInfo loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReporterService/DeleteAWordToReporter", ReplyAction="http://tempuri.org/IReporterService/DeleteAWordToReporterResponse")]
        void DeleteAWordToReporter(int replyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReporterService/DeleteAWordToReporter", ReplyAction="http://tempuri.org/IReporterService/DeleteAWordToReporterResponse")]
        System.Threading.Tasks.Task DeleteAWordToReporterAsync(int replyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReporterService/GetRecommend", ReplyAction="http://tempuri.org/IReporterService/GetRecommendResponse")]
        int GetRecommend(string reporterID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReporterService/GetRecommend", ReplyAction="http://tempuri.org/IReporterService/GetRecommendResponse")]
        System.Threading.Tasks.Task<int> GetRecommendAsync(string reporterID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReporterService/SaveRecommend", ReplyAction="http://tempuri.org/IReporterService/SaveRecommendResponse")]
        void SaveRecommend(string reporterID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReporterService/SaveRecommend", ReplyAction="http://tempuri.org/IReporterService/SaveRecommendResponse")]
        System.Threading.Tasks.Task SaveRecommendAsync(string reporterID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReporterService/SaveReporterInfo", ReplyAction="http://tempuri.org/IReporterService/SaveReporterInfoResponse")]
        void SaveReporterInfo(Wow.Tv.Middle.Model.Db49.Article.NTB_REPORTER_PROFILE model, string txtImgURL, Wow.Tv.Middle.Model.Common.LoginUserInfo loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReporterService/SaveReporterInfo", ReplyAction="http://tempuri.org/IReporterService/SaveReporterInfoResponse")]
        System.Threading.Tasks.Task SaveReporterInfoAsync(Wow.Tv.Middle.Model.Db49.Article.NTB_REPORTER_PROFILE model, string txtImgURL, Wow.Tv.Middle.Model.Common.LoginUserInfo loginUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReporterService/GetSubScription", ReplyAction="http://tempuri.org/IReporterService/GetSubScriptionResponse")]
        Wow.Tv.Middle.Model.Db49.Article.NTB_ARTICLE_SUBSCRIPTION GetSubScription(string reporterID, Wow.Tv.Middle.Model.Common.LoginUserInfo loginUserInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReporterService/GetSubScription", ReplyAction="http://tempuri.org/IReporterService/GetSubScriptionResponse")]
        System.Threading.Tasks.Task<Wow.Tv.Middle.Model.Db49.Article.NTB_ARTICLE_SUBSCRIPTION> GetSubScriptionAsync(string reporterID, Wow.Tv.Middle.Model.Common.LoginUserInfo loginUserInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReporterService/SaveSubScription", ReplyAction="http://tempuri.org/IReporterService/SaveSubScriptionResponse")]
        bool SaveSubScription(Wow.Tv.Middle.Model.Db49.Article.NTB_ARTICLE_SUBSCRIPTION model, Wow.Tv.Middle.Model.Common.LoginUserInfo loginUserInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReporterService/SaveSubScription", ReplyAction="http://tempuri.org/IReporterService/SaveSubScriptionResponse")]
        System.Threading.Tasks.Task<bool> SaveSubScriptionAsync(Wow.Tv.Middle.Model.Db49.Article.NTB_ARTICLE_SUBSCRIPTION model, Wow.Tv.Middle.Model.Common.LoginUserInfo loginUserInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReporterService/DeleteSubScription", ReplyAction="http://tempuri.org/IReporterService/DeleteSubScriptionResponse")]
        void DeleteSubScription(string reporterID, Wow.Tv.Middle.Model.Common.LoginUserInfo loginUserInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReporterService/DeleteSubScription", ReplyAction="http://tempuri.org/IReporterService/DeleteSubScriptionResponse")]
        System.Threading.Tasks.Task DeleteSubScriptionAsync(string reporterID, Wow.Tv.Middle.Model.Common.LoginUserInfo loginUserInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReporterService/SubScriptionReject", ReplyAction="http://tempuri.org/IReporterService/SubScriptionRejectResponse")]
        void SubScriptionReject(string reporterId, string userEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReporterService/SubScriptionReject", ReplyAction="http://tempuri.org/IReporterService/SubScriptionRejectResponse")]
        System.Threading.Tasks.Task SubScriptionRejectAsync(string reporterId, string userEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReporterService/SendEmail", ReplyAction="http://tempuri.org/IReporterService/SendEmailResponse")]
        void SendEmail(Wow.Tv.Middle.Model.Db49.Article.Reporter.SendEmail email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IReporterService/SendEmail", ReplyAction="http://tempuri.org/IReporterService/SendEmailResponse")]
        System.Threading.Tasks.Task SendEmailAsync(Wow.Tv.Middle.Model.Db49.Article.Reporter.SendEmail email);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IReporterServiceChannel : Wow.Tv.FrontWeb.ReporterService.IReporterService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReporterServiceClient : System.ServiceModel.ClientBase<Wow.Tv.FrontWeb.ReporterService.IReporterService>, Wow.Tv.FrontWeb.ReporterService.IReporterService {
        
        public ReporterServiceClient() {
        }
        
        public ReporterServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ReporterServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReporterServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ReporterServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Wow.Tv.Middle.Model.Common.ListModel<Wow.Tv.Middle.Model.Db49.Article.NUP_REPORTER_SELECT_Result> GetReporterList(string searchId, string searchName, string searchInitial, System.Nullable<int> page, System.Nullable<int> pageSize, string isRandom) {
            return base.Channel.GetReporterList(searchId, searchName, searchInitial, page, pageSize, isRandom);
        }
        
        public System.Threading.Tasks.Task<Wow.Tv.Middle.Model.Common.ListModel<Wow.Tv.Middle.Model.Db49.Article.NUP_REPORTER_SELECT_Result>> GetReporterListAsync(string searchId, string searchName, string searchInitial, System.Nullable<int> page, System.Nullable<int> pageSize, string isRandom) {
            return base.Channel.GetReporterListAsync(searchId, searchName, searchInitial, page, pageSize, isRandom);
        }
        
        public Wow.Tv.Middle.Model.Db49.Article.NUP_REPORTER_SELECT_Result GetReporterInfo(string reporterId) {
            return base.Channel.GetReporterInfo(reporterId);
        }
        
        public System.Threading.Tasks.Task<Wow.Tv.Middle.Model.Db49.Article.NUP_REPORTER_SELECT_Result> GetReporterInfoAsync(string reporterId) {
            return base.Channel.GetReporterInfoAsync(reporterId);
        }
        
        public Wow.Tv.Middle.Model.Common.ListModel<Wow.Tv.Middle.Model.Db49.Article.Reporter.ReportAword> GetAWordToReporter(Wow.Tv.Middle.Model.Db49.Article.Reporter.AwordCondition condition, Wow.Tv.Middle.Model.Common.LoginUserInfo loginUser) {
            return base.Channel.GetAWordToReporter(condition, loginUser);
        }
        
        public System.Threading.Tasks.Task<Wow.Tv.Middle.Model.Common.ListModel<Wow.Tv.Middle.Model.Db49.Article.Reporter.ReportAword>> GetAWordToReporterAsync(Wow.Tv.Middle.Model.Db49.Article.Reporter.AwordCondition condition, Wow.Tv.Middle.Model.Common.LoginUserInfo loginUser) {
            return base.Channel.GetAWordToReporterAsync(condition, loginUser);
        }
        
        public void SaveAWordToReporter(Wow.Tv.Middle.Model.Db49.Article.NTB_REPORTER_AWORD model, Wow.Tv.Middle.Model.Common.LoginUserInfo loginUser) {
            base.Channel.SaveAWordToReporter(model, loginUser);
        }
        
        public System.Threading.Tasks.Task SaveAWordToReporterAsync(Wow.Tv.Middle.Model.Db49.Article.NTB_REPORTER_AWORD model, Wow.Tv.Middle.Model.Common.LoginUserInfo loginUser) {
            return base.Channel.SaveAWordToReporterAsync(model, loginUser);
        }
        
        public void DeleteAWordToReporter(int replyId) {
            base.Channel.DeleteAWordToReporter(replyId);
        }
        
        public System.Threading.Tasks.Task DeleteAWordToReporterAsync(int replyId) {
            return base.Channel.DeleteAWordToReporterAsync(replyId);
        }
        
        public int GetRecommend(string reporterID) {
            return base.Channel.GetRecommend(reporterID);
        }
        
        public System.Threading.Tasks.Task<int> GetRecommendAsync(string reporterID) {
            return base.Channel.GetRecommendAsync(reporterID);
        }
        
        public void SaveRecommend(string reporterID) {
            base.Channel.SaveRecommend(reporterID);
        }
        
        public System.Threading.Tasks.Task SaveRecommendAsync(string reporterID) {
            return base.Channel.SaveRecommendAsync(reporterID);
        }
        
        public void SaveReporterInfo(Wow.Tv.Middle.Model.Db49.Article.NTB_REPORTER_PROFILE model, string txtImgURL, Wow.Tv.Middle.Model.Common.LoginUserInfo loginUser) {
            base.Channel.SaveReporterInfo(model, txtImgURL, loginUser);
        }
        
        public System.Threading.Tasks.Task SaveReporterInfoAsync(Wow.Tv.Middle.Model.Db49.Article.NTB_REPORTER_PROFILE model, string txtImgURL, Wow.Tv.Middle.Model.Common.LoginUserInfo loginUser) {
            return base.Channel.SaveReporterInfoAsync(model, txtImgURL, loginUser);
        }
        
        public Wow.Tv.Middle.Model.Db49.Article.NTB_ARTICLE_SUBSCRIPTION GetSubScription(string reporterID, Wow.Tv.Middle.Model.Common.LoginUserInfo loginUserInfo) {
            return base.Channel.GetSubScription(reporterID, loginUserInfo);
        }
        
        public System.Threading.Tasks.Task<Wow.Tv.Middle.Model.Db49.Article.NTB_ARTICLE_SUBSCRIPTION> GetSubScriptionAsync(string reporterID, Wow.Tv.Middle.Model.Common.LoginUserInfo loginUserInfo) {
            return base.Channel.GetSubScriptionAsync(reporterID, loginUserInfo);
        }
        
        public bool SaveSubScription(Wow.Tv.Middle.Model.Db49.Article.NTB_ARTICLE_SUBSCRIPTION model, Wow.Tv.Middle.Model.Common.LoginUserInfo loginUserInfo) {
            return base.Channel.SaveSubScription(model, loginUserInfo);
        }
        
        public System.Threading.Tasks.Task<bool> SaveSubScriptionAsync(Wow.Tv.Middle.Model.Db49.Article.NTB_ARTICLE_SUBSCRIPTION model, Wow.Tv.Middle.Model.Common.LoginUserInfo loginUserInfo) {
            return base.Channel.SaveSubScriptionAsync(model, loginUserInfo);
        }
        
        public void DeleteSubScription(string reporterID, Wow.Tv.Middle.Model.Common.LoginUserInfo loginUserInfo) {
            base.Channel.DeleteSubScription(reporterID, loginUserInfo);
        }
        
        public System.Threading.Tasks.Task DeleteSubScriptionAsync(string reporterID, Wow.Tv.Middle.Model.Common.LoginUserInfo loginUserInfo) {
            return base.Channel.DeleteSubScriptionAsync(reporterID, loginUserInfo);
        }
        
        public void SubScriptionReject(string reporterId, string userEmail) {
            base.Channel.SubScriptionReject(reporterId, userEmail);
        }
        
        public System.Threading.Tasks.Task SubScriptionRejectAsync(string reporterId, string userEmail) {
            return base.Channel.SubScriptionRejectAsync(reporterId, userEmail);
        }
        
        public void SendEmail(Wow.Tv.Middle.Model.Db49.Article.Reporter.SendEmail email) {
            base.Channel.SendEmail(email);
        }
        
        public System.Threading.Tasks.Task SendEmailAsync(Wow.Tv.Middle.Model.Db49.Article.Reporter.SendEmail email) {
            return base.Channel.SendEmailAsync(email);
        }
    }
}
