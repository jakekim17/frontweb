//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wow.Tv.FrontWeb.NewsCmtManageService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NewsCmtManageService.INewsCmtManageService")]
    public interface INewsCmtManageService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsCmtManageService/GetList", ReplyAction="http://tempuri.org/INewsCmtManageService/GetListResponse")]
        Wow.Tv.Middle.Model.Db49.Article.NewsCenter.NewsCmdCodeModel<Wow.Tv.Middle.Model.Db49.Article.NewsCenter.NewsCmtManageModel> GetList(Wow.Tv.Middle.Model.Db49.Article.NewsCenter.NewsCmtCondition condition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsCmtManageService/GetList", ReplyAction="http://tempuri.org/INewsCmtManageService/GetListResponse")]
        System.Threading.Tasks.Task<Wow.Tv.Middle.Model.Db49.Article.NewsCenter.NewsCmdCodeModel<Wow.Tv.Middle.Model.Db49.Article.NewsCenter.NewsCmtManageModel>> GetListAsync(Wow.Tv.Middle.Model.Db49.Article.NewsCenter.NewsCmtCondition condition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsCmtManageService/Delete", ReplyAction="http://tempuri.org/INewsCmtManageService/DeleteResponse")]
        void Delete(int[] seq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsCmtManageService/Delete", ReplyAction="http://tempuri.org/INewsCmtManageService/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(int[] seq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsCmtManageService/Update", ReplyAction="http://tempuri.org/INewsCmtManageService/UpdateResponse")]
        void Update(string seq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsCmtManageService/Update", ReplyAction="http://tempuri.org/INewsCmtManageService/UpdateResponse")]
        System.Threading.Tasks.Task UpdateAsync(string seq);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsCmtManageService/GetCommentList", ReplyAction="http://tempuri.org/INewsCmtManageService/GetCommentListResponse")]
        Wow.Tv.Middle.Model.Common.ListModel<Wow.Tv.Middle.Model.Db49.Article.NTB_ARTICLE_COMMENT> GetCommentList(Wow.Tv.Middle.Model.Db49.Article.NewsCmt.CommentCondition condition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsCmtManageService/GetCommentList", ReplyAction="http://tempuri.org/INewsCmtManageService/GetCommentListResponse")]
        System.Threading.Tasks.Task<Wow.Tv.Middle.Model.Common.ListModel<Wow.Tv.Middle.Model.Db49.Article.NTB_ARTICLE_COMMENT>> GetCommentListAsync(Wow.Tv.Middle.Model.Db49.Article.NewsCmt.CommentCondition condition);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsCmtManageService/SaveComment", ReplyAction="http://tempuri.org/INewsCmtManageService/SaveCommentResponse")]
        void SaveComment(Wow.Tv.Middle.Model.Db49.Article.NTB_ARTICLE_COMMENT model, Wow.Tv.Middle.Model.Common.LoginUserInfo loginUserInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsCmtManageService/SaveComment", ReplyAction="http://tempuri.org/INewsCmtManageService/SaveCommentResponse")]
        System.Threading.Tasks.Task SaveCommentAsync(Wow.Tv.Middle.Model.Db49.Article.NTB_ARTICLE_COMMENT model, Wow.Tv.Middle.Model.Common.LoginUserInfo loginUserInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsCmtManageService/DeleteComment", ReplyAction="http://tempuri.org/INewsCmtManageService/DeleteCommentResponse")]
        void DeleteComment(int deleteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsCmtManageService/DeleteComment", ReplyAction="http://tempuri.org/INewsCmtManageService/DeleteCommentResponse")]
        System.Threading.Tasks.Task DeleteCommentAsync(int deleteId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INewsCmtManageServiceChannel : Wow.Tv.FrontWeb.NewsCmtManageService.INewsCmtManageService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NewsCmtManageServiceClient : System.ServiceModel.ClientBase<Wow.Tv.FrontWeb.NewsCmtManageService.INewsCmtManageService>, Wow.Tv.FrontWeb.NewsCmtManageService.INewsCmtManageService {
        
        public NewsCmtManageServiceClient() {
        }
        
        public NewsCmtManageServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NewsCmtManageServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NewsCmtManageServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NewsCmtManageServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Wow.Tv.Middle.Model.Db49.Article.NewsCenter.NewsCmdCodeModel<Wow.Tv.Middle.Model.Db49.Article.NewsCenter.NewsCmtManageModel> GetList(Wow.Tv.Middle.Model.Db49.Article.NewsCenter.NewsCmtCondition condition) {
            return base.Channel.GetList(condition);
        }
        
        public System.Threading.Tasks.Task<Wow.Tv.Middle.Model.Db49.Article.NewsCenter.NewsCmdCodeModel<Wow.Tv.Middle.Model.Db49.Article.NewsCenter.NewsCmtManageModel>> GetListAsync(Wow.Tv.Middle.Model.Db49.Article.NewsCenter.NewsCmtCondition condition) {
            return base.Channel.GetListAsync(condition);
        }
        
        public void Delete(int[] seq) {
            base.Channel.Delete(seq);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(int[] seq) {
            return base.Channel.DeleteAsync(seq);
        }
        
        public void Update(string seq) {
            base.Channel.Update(seq);
        }
        
        public System.Threading.Tasks.Task UpdateAsync(string seq) {
            return base.Channel.UpdateAsync(seq);
        }
        
        public Wow.Tv.Middle.Model.Common.ListModel<Wow.Tv.Middle.Model.Db49.Article.NTB_ARTICLE_COMMENT> GetCommentList(Wow.Tv.Middle.Model.Db49.Article.NewsCmt.CommentCondition condition) {
            return base.Channel.GetCommentList(condition);
        }
        
        public System.Threading.Tasks.Task<Wow.Tv.Middle.Model.Common.ListModel<Wow.Tv.Middle.Model.Db49.Article.NTB_ARTICLE_COMMENT>> GetCommentListAsync(Wow.Tv.Middle.Model.Db49.Article.NewsCmt.CommentCondition condition) {
            return base.Channel.GetCommentListAsync(condition);
        }
        
        public void SaveComment(Wow.Tv.Middle.Model.Db49.Article.NTB_ARTICLE_COMMENT model, Wow.Tv.Middle.Model.Common.LoginUserInfo loginUserInfo) {
            base.Channel.SaveComment(model, loginUserInfo);
        }
        
        public System.Threading.Tasks.Task SaveCommentAsync(Wow.Tv.Middle.Model.Db49.Article.NTB_ARTICLE_COMMENT model, Wow.Tv.Middle.Model.Common.LoginUserInfo loginUserInfo) {
            return base.Channel.SaveCommentAsync(model, loginUserInfo);
        }
        
        public void DeleteComment(int deleteId) {
            base.Channel.DeleteComment(deleteId);
        }
        
        public System.Threading.Tasks.Task DeleteCommentAsync(int deleteId) {
            return base.Channel.DeleteCommentAsync(deleteId);
        }
    }
}
